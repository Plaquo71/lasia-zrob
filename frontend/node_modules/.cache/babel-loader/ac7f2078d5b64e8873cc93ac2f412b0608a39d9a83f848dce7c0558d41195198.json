{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lasic\\\\lasia-zrob\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddTodoForm from './components/AddTodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css'; // Upewnij się, że masz ten import, jeśli używasz CSS w App.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = text => {\n    const newTodo = {\n      id: Date.now(),\n      text\n    }; // Utwórz nowe zadanie z unikalnym ID i tekstem\n    setTodos([...todos, newTodo]); // Dodaj nowe zadanie do listy zadań\n  };\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id)); // Usuń zadanie z listy\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodoForm, {\n      onAdd: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onRemove: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddTodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","addTodo","text","newTodo","id","Date","now","removeTodo","filter","todo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onRemove","_c","$RefreshReg$"],"sources":["C:/Users/lasic/lasia-zrob/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AddTodoForm from './components/AddTodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css'; // Upewnij się, że masz ten import, jeśli używasz CSS w App.css\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (text) => {\n    const newTodo = { id: Date.now(), text }; // Utwórz nowe zadanie z unikalnym ID i tekstem\n    setTodos([...todos, newTodo]); // Dodaj nowe zadanie do listy zadań\n  };\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id)); // Usuń zadanie z listy\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n      <AddTodoForm onAdd={addTodo} /> {/* Komponent do dodawania nowych zadań */}\n      <TodoList todos={todos} onRemove={removeTodo} /> {/* Lista zadań z możliwością ich usuwania */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,OAAO,GAAIC,IAAI,IAAK;IACxB,MAAMC,OAAO,GAAG;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEJ;IAAK,CAAC,CAAC,CAAC;IAC1CF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMI,UAAU,GAAIH,EAAE,IAAK;IACzBJ,QAAQ,CAACD,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA,CAACH,WAAW;MAACuB,KAAK,EAAEf;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAChCnB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACkB,QAAQ,EAAEV;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACjB,EAAA,CAnBQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}